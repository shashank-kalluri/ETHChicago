{"ast":null,"code":"var _jsxFileName = \"/Users/shashankkalluri/Documents/Blockchain/ethchicago/frontend/src/dashboard/Orders.js\";\nimport * as React from 'react';\nimport Link from '@mui/material/Link';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport Title from './Title';\n\n// Generate Order Data\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction createData(date, amount, price, value) {\n  return {\n    date,\n    amount,\n    price,\n    value\n  };\n}\nfunction preventDefault(event) {\n  event.preventDefault();\n}\nconst formatter = new Intl.NumberFormat('en-US', {\n  style: 'currency',\n  currency: 'USD'\n\n  // These options are needed to round to whole numbers if that's what you want.\n  //minimumFractionDigits: 0, // (this suffices for whole numbers, but will print 2500.10 as $2,500.1)\n  //maximumFractionDigits: 0, // (causes 2500.99 to be printed as $2,501)\n});\n\nexport default function Orders({\n  data\n}) {\n  if (!data) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 12\n    }, this);\n  }\n  const rows = data.txns.map(([date, amount, price, value]) => createData(date, amount, price, value));\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Title, {\n      children: \"Transactions\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Table, {\n      size: \"small\",\n      children: [/*#__PURE__*/_jsxDEV(TableHead, {\n        children: /*#__PURE__*/_jsxDEV(TableRow, {\n          children: [/*#__PURE__*/_jsxDEV(TableCell, {\n            children: \"Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: \"Ticker\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"right\",\n            children: \"Amount\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"right\",\n            children: \"Price\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"right\",\n            children: \"Value\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n        children: rows.map(row => /*#__PURE__*/_jsxDEV(TableRow, {\n          children: [/*#__PURE__*/_jsxDEV(TableCell, {\n            children: row.date\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: \"BTC\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"right\",\n            children: row.amount\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"right\",\n            children: formatter.format(row.price)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"right\",\n            children: formatter.format(row.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 15\n          }, this)]\n        }, row.date, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n_c = Orders;\nvar _c;\n$RefreshReg$(_c, \"Orders\");","map":{"version":3,"names":["React","Link","Table","TableBody","TableCell","TableHead","TableRow","Title","jsxDEV","_jsxDEV","createData","date","amount","price","value","preventDefault","event","formatter","Intl","NumberFormat","style","currency","Orders","data","fileName","_jsxFileName","lineNumber","columnNumber","rows","txns","map","Fragment","children","size","align","row","format","_c","$RefreshReg$"],"sources":["/Users/shashankkalluri/Documents/Blockchain/ethchicago/frontend/src/dashboard/Orders.js"],"sourcesContent":["import * as React from 'react';\nimport Link from '@mui/material/Link';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport Title from './Title';\n\n// Generate Order Data\nfunction createData(date, amount, price, value) {\n  return { date, amount, price, value };\n}\n\nfunction preventDefault(event) {\n  event.preventDefault();\n}\n\nconst formatter = new Intl.NumberFormat('en-US', {\n  style: 'currency',\n  currency: 'USD',\n\n  // These options are needed to round to whole numbers if that's what you want.\n  //minimumFractionDigits: 0, // (this suffices for whole numbers, but will print 2500.10 as $2,500.1)\n  //maximumFractionDigits: 0, // (causes 2500.99 to be printed as $2,501)\n});\n\nexport default function Orders({ data }) {\n  if (!data) {\n    return <div />;\n  }\n  const rows = data.txns.map(([date, amount, price, value]) => createData(date, amount, price, value))\n  return (\n    <React.Fragment>\n      <Title>Transactions</Title>\n      <Table size=\"small\">\n        <TableHead>\n          <TableRow>\n            <TableCell>Date</TableCell>\n            <TableCell>Ticker</TableCell>\n            <TableCell align=\"right\">Amount</TableCell>\n            <TableCell align=\"right\">Price</TableCell>\n            <TableCell align=\"right\">Value</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {rows.map((row) => (\n            <TableRow key={row.date}>\n              <TableCell>{row.date}</TableCell>\n              <TableCell>BTC</TableCell>\n              <TableCell align=\"right\">{row.amount}</TableCell>\n              <TableCell align=\"right\">{formatter.format(row.price)}</TableCell>\n              <TableCell align=\"right\">{formatter.format(row.value)}</TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </React.Fragment>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}