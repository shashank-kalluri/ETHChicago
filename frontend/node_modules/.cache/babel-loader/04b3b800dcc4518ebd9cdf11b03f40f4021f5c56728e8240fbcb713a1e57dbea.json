{"ast":null,"code":"var _jsxFileName = \"/Users/shashankkalluri/Documents/Blockchain/ethchicago/frontend/src/dashboard/BasicAccordion.js\";\nimport * as React from 'react';\nimport Accordion from '@mui/material/Accordion';\nimport AccordionSummary from '@mui/material/AccordionSummary';\nimport AccordionDetails from '@mui/material/AccordionDetails';\nimport Typography from '@mui/material/Typography';\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\nimport { CodeBlock } from \"react-code-blocks\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function BasicAccordion(code_1) {\n  print(code_1);\n  const code = `\n  import backtrader as bt\n\n  class Strategy(bt.Strategy):\n      params = (\n          (\"short_period\", 50),\n          (\"long_period\", 200),\n      )\n  \n      def __init__(self):\n          self.short_ma = bt.indicators.SimpleMovingAverage(\n              self.data.close, period=self.params.short_period\n          )\n          self.long_ma = bt.indicators.SimpleMovingAverage(\n              self.data.close, period=self.params.long_period\n          )\n  \n      def next(self):\n          if self.short_ma > self.long_ma and not self.position:\n              # Generate a buy signal and execute the order\n              self.buy()\n          elif self.short_ma < self.long_ma and self.position:\n              # Generate a sell signal and execute the order\n              self.sell()\n  `;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Accordion, {\n      children: [/*#__PURE__*/_jsxDEV(AccordionSummary, {\n        expandIcon: /*#__PURE__*/_jsxDEV(ExpandMoreIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 23\n        }, this),\n        \"aria-controls\": \"panel1a-content\",\n        id: \"panel1a-header\",\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          children: \"Trading Strategy Code\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AccordionDetails, {\n        children: /*#__PURE__*/_jsxDEV(CodeBlock, {\n          text: code,\n          language: \"python\",\n          showLineNumbers: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n_c = BasicAccordion;\nvar _c;\n$RefreshReg$(_c, \"BasicAccordion\");","map":{"version":3,"names":["React","Accordion","AccordionSummary","AccordionDetails","Typography","ExpandMoreIcon","CodeBlock","jsxDEV","_jsxDEV","BasicAccordion","code_1","print","code","children","expandIcon","fileName","_jsxFileName","lineNumber","columnNumber","id","text","language","showLineNumbers","_c","$RefreshReg$"],"sources":["/Users/shashankkalluri/Documents/Blockchain/ethchicago/frontend/src/dashboard/BasicAccordion.js"],"sourcesContent":["import * as React from 'react';\nimport Accordion from '@mui/material/Accordion';\nimport AccordionSummary from '@mui/material/AccordionSummary';\nimport AccordionDetails from '@mui/material/AccordionDetails';\nimport Typography from '@mui/material/Typography';\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\n\nimport { CodeBlock } from \"react-code-blocks\";\n\nexport default function BasicAccordion(code_1) {\n  print(code_1)\n  const code = `\n  import backtrader as bt\n\n  class Strategy(bt.Strategy):\n      params = (\n          (\"short_period\", 50),\n          (\"long_period\", 200),\n      )\n  \n      def __init__(self):\n          self.short_ma = bt.indicators.SimpleMovingAverage(\n              self.data.close, period=self.params.short_period\n          )\n          self.long_ma = bt.indicators.SimpleMovingAverage(\n              self.data.close, period=self.params.long_period\n          )\n  \n      def next(self):\n          if self.short_ma > self.long_ma and not self.position:\n              # Generate a buy signal and execute the order\n              self.buy()\n          elif self.short_ma < self.long_ma and self.position:\n              # Generate a sell signal and execute the order\n              self.sell()\n  `;\n\n  return (\n    <div>\n      <Accordion>\n        <AccordionSummary\n          expandIcon={<ExpandMoreIcon />}\n          aria-controls=\"panel1a-content\"\n          id=\"panel1a-header\"\n        >\n          <Typography>\n            Trading Strategy Code\n          </Typography>\n        </AccordionSummary>\n        <AccordionDetails>\n          <CodeBlock\n            text={code}\n            language='python'\n            showLineNumbers={true}\n          />\n        </AccordionDetails>\n      </Accordion>\n    </div>\n  );\n}\n"],"mappings":";AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,OAAOC,SAAS,MAAM,yBAAyB;AAC/C,OAAOC,gBAAgB,MAAM,gCAAgC;AAC7D,OAAOC,gBAAgB,MAAM,gCAAgC;AAC7D,OAAOC,UAAU,MAAM,0BAA0B;AACjD,OAAOC,cAAc,MAAM,gCAAgC;AAE3D,SAASC,SAAS,QAAQ,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9C,eAAe,SAASC,cAAcA,CAACC,MAAM,EAAE;EAC7CC,KAAK,CAACD,MAAM,CAAC;EACb,MAAME,IAAI,GAAI;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;EAED,oBACEJ,OAAA;IAAAK,QAAA,eACEL,OAAA,CAACP,SAAS;MAAAY,QAAA,gBACRL,OAAA,CAACN,gBAAgB;QACfY,UAAU,eAAEN,OAAA,CAACH,cAAc;UAAAU,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAE;QAC/B,iBAAc,iBAAiB;QAC/BC,EAAE,EAAC,gBAAgB;QAAAN,QAAA,eAEnBL,OAAA,CAACJ,UAAU;UAAAS,QAAA,EAAC;QAEZ;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAY;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACG,CAAC,eACnBV,OAAA,CAACL,gBAAgB;QAAAU,QAAA,eACfL,OAAA,CAACF,SAAS;UACRc,IAAI,EAAER,IAAK;UACXS,QAAQ,EAAC,QAAQ;UACjBC,eAAe,EAAE;QAAK;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACvB;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACc,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACV;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACT,CAAC;AAEV;AAACK,EAAA,GAlDuBd,cAAc;AAAA,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}